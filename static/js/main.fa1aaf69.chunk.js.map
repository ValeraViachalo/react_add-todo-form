{"version":3,"sources":["api/users.ts","components/GetUser/GetUser.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","GetUser","userId","usersFromServer","find","user","UserInfo","href","className","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","preparedTodo","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","action","method","onSubmit","event","preventDefault","currentTodos","allTodos","Math","max","currentTodo","htmlFor","type","placeholder","value","onChange","newTitle","target","replace","disabled","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa1aaf69.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\nimport { User } from '../types/User';\n\nexport const GetUser = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  user ? (\n    <a\n      href={`mailto:${user.email}`}\n      className=\"UserInfo\"\n    >\n      {user.name}\n    </a>\n  ) : (\n    null\n  )\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../types/Todo';\nimport { GetUser } from '../GetUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    userId,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n\n    <UserInfo user={GetUser(userId)} />\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodo = todosFromServer;\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[]>(preparedTodo);\n\n  const getNewTodoId = (allTodos: Todo[]) => {\n    const maxId = Math.max(\n      ...allTodos.map(currentTodo => currentTodo.id),\n    );\n\n    return maxId + 1;\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value\n      .replace(/[^A-Za-z0-9\\u0400-\\u04FF\\s]/g, '');\n\n    setTitle(newTitle);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    setTodos(currentTodos => [...currentTodos, {\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n    }]);\n\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            <br />\n\n            <input\n              id=\"title\"\n              type=\"type\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">Pleace enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\">\n            User:\n            <br />\n\n            <select\n              id=\"user-id\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(currentUser => (\n                <option value={currentUser.id} key={currentUser.id}>\n                  {currentUser.name}\n                </option>\n              ))}\n\n            </select>\n\n            {hasUserIdError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}